{"version":3,"sources":["utils/validators/validators.js","FormControls/FormControls.js","hoc/AuthRedirect.js","Components/ProfileComponent/PostComponent/Post.js","Components/ProfileComponent/MyPostsComponent/MyPosts.js","Components/ProfileComponent/MyPostsComponent/MyPostsContainer.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/ProfileComponent/ProfileStatus/ProfileStatusWithHooks.js","Components/ProfileComponent/ProfileInfoComponent/ProfileDataComponent/ProfileData.js","Components/ProfileComponent/ProfileInfoComponent/ProfileDataForm/ProfileDataForm.js","Components/ProfileComponent/ProfileInfoComponent/ProfileInfo.js","Components/ProfileComponent/Profile.js","Components/ProfileComponent/ProfileContainer.js"],"names":["required","value","maxLength","max","length","undefined","classNames","require","Textarea","input","meta","touched","error","placeholder","warning","props","hasError","classesForTextarea","className","Input","authRedirect","Component","RedirectComponent","this","isAuth","to","React","connect","state","auth","authRedirectAwaiter","AuthRedirectAwaiter","authThunkCreator","Post","src","alt","message","maxLength30","AddPostsReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","Field","component","name","rows","validate","MyPostsContainer","profilePage","addPost","addPostActionCreator","text","newPostText","posts","reverse","map","post","key","id","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","autoFocus","onBlur","updateUserStatus","onDoubleClick","isOwner","ProfileData","profile","goToEditMode","aboutMe","lookingForAJob","lookingForAJobDescription","keys","contacts","contactsTitle","contactsValue","onClick","Contacts","type","ProfileDataFormReduxForm","initialValues","style","flexBasis","ProfileInfo","Preloader","imagePath","photos","large","fullName","formData","saveData","then","target","savePhoto","files","Profile","ProfileContainer","refreshProfile","prevProps","prevState","snapshot","match","params","userId","logUserId","getUserThunkCreator","getUserStatusThunkCreator","savePhotoThunkCreator","saveDataThunkCreator","updateUserStatusThunkCreator","compose","withRouter"],"mappings":"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","file":"static/js/4.d39a10cc.chunk.js","sourcesContent":["export const required = value => {\r\n  if(value) return undefined;\r\n  return 'Field is reqiared';\r\n};\r\n\r\nexport const maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n","import React from 'react';\nimport './FormControls.css';\nlet classNames = require('classnames');\n\nexport const Textarea = ({input, meta: { touched, error, warning }, placeholder, ...props}) => {\n  const hasError =  touched && error;\n  const classesForTextarea = classNames({\n    'form-control': true,\n    'send-message': true,\n    'errorTextarea': hasError,\n    'borderColor': !hasError\n  });\n\n  return (\n    <textarea className={classesForTextarea} placeholder={placeholder} {...input} {...props}/>\n  )\n}\n\nexport const Input = ({input, meta: { touched, error, warning }, placeholder, ...props}) => {\n  const hasError =  touched && error;\n  const classesForTextarea = classNames({\n    'form-control': true,\n    'errorTextarea': hasError,\n    'borderColor': !hasError\n  });\n\n  return (\n    <input className={classesForTextarea} placeholder={placeholder} {...input} {...props}/>\n  )\n}\n","import { Redirect } from 'react-router-dom';\r\nimport React  from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { authThunkCreator } from '../reducers/authReducer';\r\nimport { Preloader } from '../Components/PreloaderComponent/Preloader';\r\n\r\n\r\nexport const authRedirect = (Component) => {\r\n  \r\n  let mapStateToRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n  class RedirectComponent extends React.Component {\r\n    \r\n    render() {\r\n      if(!this.props.isAuth){\r\n        return <Redirect to=\"/login\"/>\r\n      } \r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let connectAuthRedirect = connect(mapStateToRedirect)(RedirectComponent);\r\n\r\n  return connectAuthRedirect;\r\n};\r\n\r\nexport const authRedirectAwaiter = (Component) => {\r\n  \r\n  let mapStateToRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n  class AuthRedirectAwaiter extends React.Component {\r\n    componentDidMount() {\r\n      this.props.authThunkCreator();\r\n    }\r\n    \r\n    render() {\r\n      if(this.props.isAuth === null){\r\n        return <Preloader />\r\n      } \r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n\r\n  let connectAuthRedirect = connect(mapStateToRedirect, {authThunkCreator})(AuthRedirectAwaiter);\r\n\r\n  return connectAuthRedirect;\r\n};\r\n","import React  from \"react\";\r\n\r\nimport \"./Post.css\";\r\n\r\nexport function Post(props) {\r\n  return (\r\n    <div className=\"post\">\r\n      <img src=\"https://avatars.yandex.net/get-music-user-playlist/27701/265236767.1000.16809/m1000x1000?1498108273588&webp=false\" alt=''/>\r\n      <span>{props.message}</span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport { required, maxLength } from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../../FormControls/FormControls\";\n\nimport \"./MyPosts.css\";\n\nimport { Post } from \"../PostComponent/Post\";\n\nconst afterSubmit = (result, dispatch) =>\n    dispatch(reset('addPost'));\n\nexport function MyPosts(props) {\n    let addNewPost = text => {\n        props.addPost(text.newPostText);\n    };\n\n    return (\n        <div className=\"profile_posts\">\n            <AddPostsReduxForm onSubmit={addNewPost} />\n            <div className=\"profile_posts-items\">\n                {[...props.profilePage.posts].reverse().map(post => {\n                    return <Post key={post.id} message={post.message} />;\n                })}\n            </div>\n        </div>\n    );\n}\n\nlet maxLength30 = maxLength(30);\n\nfunction PostsForm(props) {\n    return (\n        <form className=\"form-group textarea\" onSubmit={props.handleSubmit}>\n            <Field\n                component={Textarea}\n                name=\"newPostText\"\n                placeholder=\"What's new?\"\n                rows=\"3\"\n                value=''\n                validate={[required, maxLength30]}\n            />\n            <div>\n                <button className=\"btn btn-primary textarea-send\">Add</button>\n            </div>\n        </form>\n    );\n}\n\nconst AddPostsReduxForm = reduxForm({\n    form: \"addPost\",\n    onSubmitSuccess: afterSubmit\n})(PostsForm);\n","import { connect } from \"react-redux\";\n\nimport { MyPosts } from \"./MyPosts\";\nimport {\n  addPostActionCreator\n} from \"../../../reducers/profileReducer\";\n\nlet mapStateToProps = state => {\n  return {\n    profilePage: state.profilePage\n  };\n};\n\nexport let MyPostsContainer = connect(\n  mapStateToProps,\n  {\n    addPost: addPostActionCreator\n  }\n)(MyPosts);\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from \"react\";\nimport \"./ProfileStatus.css\"\n\nexport let ProfileStatusWithHooks = props => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  const activateEditMode = () => {\n    props.isOwner ? setEditMode(true) : setEditMode(false);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateUserStatus(status);\n  };\n\n  const onStatusChange = e => {\n    setStatus(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  return (\n    <div className='profile-status'>\n      {!editMode ? (\n        <div onDoubleClick={activateEditMode}>\n          {props.status || \"No status\"}\n        </div>\n      ) : (\n        <div>\n          <input\n            onChange={onStatusChange}\n            autoFocus={true}\n            onBlur={deactivateEditMode}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\r\nimport \"./ProfileData.css\";\r\n\r\nexport const ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <span className=\"profile_info-title\">About me: </span>\r\n        <span>{profile.aboutMe}</span>\r\n      </div>\r\n      <div>\r\n        <span className=\"profile_info-title\">Looking for a job: </span>\r\n        <span>{profile.lookingForAJob ? \"yes\" : \"no\"}</span>\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <span className=\"profile_info-title\">My professional skills: </span>\r\n          <span>{profile.lookingForAJobDescription}</span>\r\n        </div>\r\n      )}\r\n      <div className=\"profile_info-title\">Contacts: </div>\r\n      {Object.keys(profile.contacts).map(key => {\r\n        return (\r\n          <Contacts\r\n            key={key}\r\n            contactsTitle={key}\r\n            contactsValue={profile.contacts[key]}\r\n          />\r\n        );\r\n      })}\r\n      {isOwner &&<div><button className=\"btn btn-primary\" onClick={goToEditMode}>edit</button></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Contacts = ({ contactsTitle, contactsValue }) => {\r\n  return (\r\n    <div>\r\n      <span className=\"profile_info-title contacts\">{contactsTitle}: </span>\r\n      <span>{contactsValue}</span>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../../../FormControls/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {required} from \"../../../../utils/validators/validators\";\r\nimport './ProfileDataForm.css';\r\n\r\nconst ProfileDataForm = ({handleSubmit, initialValues, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <span className=\"profile_info-title\">Full name: </span>\r\n                <Field\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    name=\"fullName\"\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <span className=\"profile_info-title\">About me: </span>\r\n                <Field\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    name=\"aboutMe\"\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div className='profile_info-checkbox'>\r\n                <span className=\"profile_info-title profile_info-checkbox-title\">Looking for a job: </span>\r\n                <Field\r\n                    component={Input}\r\n                    style={{flexBasis:'10%'}}\r\n                    type=\"checkbox\"\r\n                    name=\"lookingForAJob\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <span className=\"profile_info-title\">My professional skills: </span>\r\n                <Field\r\n                    component={Textarea}\r\n                    type=\"text\"\r\n                    name=\"lookingForAJobDescription\"\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div className=\"profile_info-title\">Contacts:</div>\r\n            {Object.keys(initialValues.contacts).map(key => {\r\n                return (\r\n                    <Contacts\r\n                        key={key}\r\n                        contactsTitle={key}\r\n                        contactsValue={initialValues.contacts[key]}\r\n                    />\r\n                );\r\n            })}\r\n            <div className='someError'>{error}</div>\r\n            <div>\r\n                <button className=\"btn btn-primary\">save</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst Contacts = ({contactsTitle, contactsValue}) => {\r\n    return (\r\n        <div>\r\n            <span className=\"profile_info-title contacts\">{contactsTitle}: </span>\r\n            <Field component={Input} type=\"text\" name={`contacts.${contactsTitle}`}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const ProfileDataFormReduxForm = reduxForm({\r\n    form: \"edit-profile\"\r\n})(ProfileDataForm);\r\n","import React, { useState } from \"react\";\r\nimport { Preloader } from \"../../PreloaderComponent/Preloader\";\r\n\r\nimport \"./ProfileInfo.css\";\r\nimport { ProfileStatusWithHooks } from \"../ProfileStatus/ProfileStatusWithHooks\";\r\nimport { ProfileData } from \"./ProfileDataComponent/ProfileData\";\r\nimport { ProfileDataFormReduxForm } from \"./ProfileDataForm/ProfileDataForm\";\r\n\r\nexport function ProfileInfo(props) {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelector = e => {\r\n    if (e.target.value.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = formData => {\r\n    props.saveData(formData).then(()=>{\r\n      setEditMode(false);\r\n    })\r\n  };\r\n\r\n  let imagePath = props.profile.photos.large\r\n    ? props.profile.photos.large\r\n    : \"https://avatars.mds.yandex.net/get-pdb/1732371/78b3b128-3813-4d35-8b87-b3c911581ca0/s1200?webp=false\";\r\n  return (\r\n    <>\r\n      <div className=\"profile_info\">\r\n        <div>\r\n          <img src={imagePath} alt='' className=\"profile_info-avatar\" />\r\n        </div>\r\n        <div className=\"profile_information\">\r\n          <span className=\"profile_info-name\">{props.profile.fullName}</span>\r\n          <ProfileStatusWithHooks\r\n            status={props.status}\r\n            isOwner={props.isOwner}\r\n            updateUserStatus={props.updateUserStatus}\r\n          />\r\n          {editMode ? (\r\n            <ProfileDataFormReduxForm\r\n              initialValues={props.profile}\r\n              onSubmit={onSubmit}\r\n            />\r\n          ) : (\r\n            <ProfileData\r\n              goToEditMode={() => {\r\n                setEditMode(true);\r\n              }}\r\n              profile={props.profile}\r\n              isOwner={props.isOwner}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {props.isOwner && (\r\n        <div className=\"profile_info-addPhoto\">\r\n          Update avatar <input type=\"file\" onChange={onMainPhotoSelector} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React  from \"react\";\r\n\r\nimport \"./Profile.css\";\r\n\r\nimport { MyPostsContainer } from \"./MyPostsComponent/MyPostsContainer\";\r\nimport { ProfileInfo } from \"./ProfileInfoComponent/ProfileInfo\";\r\n\r\nexport function Profile(props) {\r\n  return (\r\n    <div className=\"profile-content\">\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        isOwner={props.isOwner}\r\n        updateUserStatus={props.updateUserStatus}\r\n        savePhoto={props.savePhoto}\r\n        saveData={props.saveData}\r\n      />\r\n      <div className=\"profile_posts\">\r\n        <MyPostsContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\n\nimport { Profile } from \"./Profile\";\nimport {\n  getUserThunkCreator,\n  getUserStatusThunkCreator,\n  updateUserStatusThunkCreator,\n  savePhotoThunkCreator,\n  saveDataThunkCreator\n} from \"../../reducers/profileReducer\";\nimport { Preloader } from \"../PreloaderComponent/Preloader\";\nimport { authRedirect, authRedirectAwaiter } from \"../../hoc/AuthRedirect\";\n\nclass ProfileContainer extends Component {\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.match.params.userId !== prevProps.match.params.userId){\n      this.refreshProfile();\n    }\n  }\n\n  refreshProfile() {\n    let userId = this.props.match.params.userId\n      ? this.props.match.params.userId\n      : this.props.logUserId;\n    this.props.getUserThunkCreator(userId);\n    this.props.getUserStatusThunkCreator(userId);\n  }\n\n  render() {\n    return (\n      <>\n        {!this.props.profile ? (\n          <Preloader />\n        ) : (\n            <Profile\n              {...this.props}\n              profile={this.props.profile}\n              status={this.props.status}\n              isOwner={!this.props.match.params.userId}\n              savePhoto={this.props.savePhotoThunkCreator}\n              saveData={this.props.saveDataThunkCreator}\n              updateUserStatus={this.props.updateUserStatusThunkCreator}\n            />\n        )}\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    logUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    {\n      getUserThunkCreator,\n      getUserStatusThunkCreator,\n      updateUserStatusThunkCreator,\n      savePhotoThunkCreator,\n      saveDataThunkCreator\n    }\n  ),\n  withRouter,\n  authRedirectAwaiter,\n  authRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}