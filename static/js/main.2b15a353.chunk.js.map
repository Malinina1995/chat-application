{"version":3,"sources":["Components/HeaderComponent/Header.tsx","Components/HeaderComponent/headerConnector.ts","Components/HeaderComponent/HeaderContainer.tsx","Components/NavComponent/Nav.tsx","Components/NewsComponent/News.tsx","Components/MusicComponent/Music.tsx","Components/SettingsComponent/Settings.tsx","hoc/withSuspanse.js","Components/404/404.tsx","redux-store.ts","Components/ProfileComponent/notFound.tsx","Components/AppComponent/App.tsx","index.tsx","reducers/authReducer.ts","Components/PreloaderComponent/Preloader.tsx","reducers/profileReducer.ts","reducers/dialogsReducer.ts","reducers/usersReducer.ts","api/api.js"],"names":["Header","isAuth","login","logoutThunkCreator","className","to","type","onClick","mapDispatchToProps","authThunkCreator","headerConnector","connect","state","auth","this","props","Component","Nav","activeClassName","News","Music","Settings","withSuspense","fallback","Preloader","NotFound","history","createBrowserHistory","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","friendsPage","usersReducer","authReducer","form","formReducer","router","connectRouter","store","createStore","compose","applyMiddleware","thunkMiddleware","routerMiddleware","UserNotFound","ProfileContainer","lazy","DialogsContainer","UsersContainer","LoginContainer","App","path","render","component","exact","from","document","getElementById","initialState","userId","undefined","email","captchaURL","action","data","captchaUrl","setUserDataActionCreator","captcha","dispatch","a","authAPI","getAuth","res","resultCode","id","loginThunkCreator","password","rememberMe","getCaptchaURLThunkCreator","stopSubmit","_error","messages","logout","securityAPI","getCaptchaURL","url","src","alt","ADD_POST","posts","message","profile","status","text","trim","length","photos","file","addPostActionCreator","getUserStatusActionCreator","savePhotoActionCreator","getUserThunkCreator","profileAPI","getProfile","push","getUserStatusThunkCreator","getStatus","updateUserStatusThunkCreator","updateStatus","savePhotoThunkCreator","savePhoto","saveDataThunkCreator","getState","saveProfile","Promise","reject","dialogs","name","newText","addMessageActionCreator","users","pageSize","totalUsersCount","currentPage","isFetching","followInProgress","map","user","followed","filter","followActionCreator","unfollowActionCreator","setCurrentPageActionCreator","toggleIsFetchingActionCreator","followingInProgressActionCreator","usersAPI","getUsers","items","totalCount","_followUnfollowMethod","apiMethod","actionCreator","followUserThunkCreator","followUsers","bind","unfollowUserThunkCreator","unfollowUsers","instance","axios","withCredentials","baseURL","headers","get","then","post","delete","put","formData","FormData","append"],"mappings":"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","file":"static/js/main.2b15a353.chunk.js","sourcesContent":["import React  from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Header.css\";\r\nimport {LogoutThunkCreatorType} from \"./headerConnector\";\r\n\r\ntype HeaderProps = {\r\n    isAuth: boolean | undefined;\r\n    login: string | undefined;\r\n    logoutThunkCreator: LogoutThunkCreatorType\r\n}\r\n\r\nexport const Header: React.FC<HeaderProps> = ({isAuth, login, logoutThunkCreator}) => {\r\n  return (\r\n    <div className=\"header d-flex flex-column flex-md-row align-items-center p-3 px-md-4 bg-white border-bottom shadow-sm\">\r\n      <h5 className=\"my-0 mr-md-auto font-weight-normal\">\r\n        <Link to=\"/\">IT-community</Link>\r\n      </h5>\r\n      {isAuth ? (\r\n        <div>\r\n          <span className=\"login-name\">{login}</span>\r\n          <button type=\"button\" className=\"btn btn-outline-primary\" onClick={logoutThunkCreator}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <Link className=\"btn btn-outline-primary\" to={\"/login\"}>\r\n          Sign up\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {connect, ConnectedProps} from \"react-redux\";\n\nimport {AppReducerType} from \"../../redux-store\";\nimport {authThunkCreator, logoutThunkCreator} from \"../../reducers/authReducer\";\n\nconst mapStateToProps = (state: AppReducerType) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nconst mapDispatchToProps = {\n    authThunkCreator, logoutThunkCreator\n}\n\nexport const headerConnector = connect(mapStateToProps, mapDispatchToProps);\nexport type PropsFromRedux = ConnectedProps<typeof headerConnector>;\nexport type AuthThunkCreatorType = PropsFromRedux[\"authThunkCreator\"];\nexport type LogoutThunkCreatorType = PropsFromRedux[\"logoutThunkCreator\"];\n","import React, {Component} from 'react';\nimport {Header} from './Header';\nimport {AuthThunkCreatorType, headerConnector, LogoutThunkCreatorType} from \"./headerConnector\";\n\ntype HeaderContainerProps = {\n    authThunkCreator: AuthThunkCreatorType;\n    isAuth: boolean | undefined;\n    login: string | undefined;\n    logoutThunkCreator: LogoutThunkCreatorType\n}\n\nclass HeaderContainer extends Component<HeaderContainerProps> {\n    componentDidMount() {\n        this.props.authThunkCreator();\n    }\n\n    render() {\n        return <Header {...this.props} />;\n    }\n}\n\n\nexport default headerConnector(HeaderContainer);\n","import React  from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./Nav.css\";\r\n\r\nexport const Nav:React.FC = () => {\r\n    return (\r\n        <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n        <div className=\"sidebar-sticky\">\r\n          <ul className=\"nav flex-column\">\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/profile\" className=\"nav-link\" activeClassName='is-active'>\r\n                Profile\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/dialogs\" className=\"nav-link\" activeClassName='is-active'>\r\n                Message\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"news\" className=\"nav-link\" activeClassName='is-active'>\r\n                News\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/music\" className=\"nav-link\" activeClassName='is-active'>\r\n                Music\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/users\" className=\"nav-link\" activeClassName='is-active'>\r\n                Users\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/settings\" className=\"nav-link\" activeClassName='is-active'>\r\n                Settings\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  \r\n}\r\n","import React  from \"react\";\r\n\r\nimport \"./News.css\";\r\n\r\nexport const News:React.FC = () => {\r\n    return (\r\n        <div className='news-content'>\r\n          News work!\r\n        </div>\r\n    );\r\n  \r\n}\r\n","import React  from \"react\";\r\n\r\nimport \"./Music.css\";\r\n\r\nexport const Music: React.FC = () => {\r\n    return (\r\n        <div className='music-content'>\r\n          Music work!\r\n        </div>\r\n    );\r\n  \r\n}\r\n","import React  from \"react\";\r\n\r\nimport \"./Settings.css\";\r\n\r\nexport const Settings: React.FC = () => {\r\n    return (\r\n        <div className='settings-content'>\r\n          Settings work!\r\n        </div>\r\n    );\r\n  \r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport { Preloader } from \"../Components/PreloaderComponent/Preloader\";\r\n\r\nexport const withSuspense = Component => {\r\n  return props => {\r\n    return <Suspense fallback={<Preloader />}>\r\n      <Component {...props} />\r\n    </Suspense>\r\n  };\r\n};\r\n","import React from 'react';\nimport './404.css';\n\nexport const NotFound:React.FC = () => {\n  return (\n      <div className='notfound'>\n          404 PAGE NOT FOUND\n      </div>\n  )\n};\n","import {combineReducers, createStore, applyMiddleware, compose} from \"redux\";\n\nimport { dialogsReducer } from \"./reducers/dialogsReducer\";\nimport { profileReducer } from \"./reducers/profileReducer\";\nimport { usersReducer } from \"./reducers/usersReducer\";\nimport { authReducer } from \"./reducers/authReducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form';\nimport {connectRouter, routerMiddleware} from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n\nlet reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  friendsPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  router: connectRouter(history),\n});\n\ntype ReducerType = typeof reducers;\nexport type AppReducerType = ReturnType<ReducerType>;\n\nexport let store = createStore(reducers,\n    compose(\n        applyMiddleware(thunkMiddleware),\n        applyMiddleware(routerMiddleware(history))\n    ));\n","import React from \"react\";\n\nexport const UserNotFound = () => {\n    return (\n        <div className='notfound'>\n            User with this id not found\n        </div>\n    )\n}\n","import React, {lazy} from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\n\r\nimport HeaderContainer from \"../HeaderComponent/HeaderContainer\";\r\nimport {Nav} from \"../NavComponent/Nav\";\r\nimport {News} from \"../NewsComponent/News\";\r\nimport {Music} from \"../MusicComponent/Music\";\r\nimport {Settings} from \"../SettingsComponent/Settings\";\r\nimport {withSuspense} from \"../../hoc/withSuspanse\";\r\nimport \"./App.css\";\r\nimport {NotFound} from \"../404/404\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport { history } from '../../redux-store';\r\nimport {UserNotFound} from \"../ProfileComponent/notFound\";\r\n\r\nconst ProfileContainer = lazy(() =>\r\n    import(\"../ProfileComponent/ProfileContainer\")\r\n);\r\nconst DialogsContainer = lazy(() =>\r\n    import(\"../DialogsComponent/DialogsContainer\")\r\n);\r\nconst UsersContainer = lazy(() => import(\"../UsersComponent/UsersContainer\"));\r\nconst LoginContainer = lazy(() => import(\"../LoginComponent/Login\"));\r\n\r\n\r\nexport const App: React.FC = () => {\r\n    return (\r\n        <ConnectedRouter history={history}>\r\n            <div className=\"app container\">\r\n                <HeaderContainer/>\r\n                <div className=\"content\">\r\n                    <Nav/>\r\n                    <div className=\"main-content\">\r\n                        <Switch>\r\n                            <Route path='/profile/error' render={UserNotFound}/>\r\n                            <Route\r\n                                path=\"/profile/:userId?\"\r\n                                render={withSuspense(ProfileContainer)}\r\n                            />\r\n                            <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>\r\n                            <Route path=\"/users\" render={withSuspense(UsersContainer)}/>\r\n                            <Route path=\"/news\" component={News}/>\r\n                            <Route path=\"/music\" component={Music}/>\r\n                            <Route path=\"/settings\" component={Settings}/>\r\n                            <Route path=\"/login\" render={withSuspense(LoginContainer)}/>\r\n                            <Redirect exact from='/' to='/profile'/>\r\n                            <Route render={() => <NotFound/>}/>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ConnectedRouter>);\r\n}\r\n","import React  from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from 'react-redux';\n\nimport \"./style.css\";\n\nimport { App } from \"./Components/AppComponent/App\";\nimport { store } from \"./redux-store\";\n\n\n  render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\n","import {authAPI, securityAPI} from \"../api/api\";\nimport {FormAction, stopSubmit} from \"redux-form\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppReducerType} from \"../redux-store\";\n\nconst SET_USER_DATA = \"auth/SET-USER-DATA\";\nconst GET_CAPTCHA_URL = \"auth/GET-CAPTCHA-URL\";\n\ntype AuthInitialStateType = {\n    userId?: number,\n    email?: string,\n    login?: string,\n    isAuth?: boolean,\n    captchaURL?: string\n}\n\nlet initialState: AuthInitialStateType = {\n    userId: undefined,\n    email: undefined,\n    login: undefined,\n    isAuth: undefined,\n    captchaURL: undefined\n};\n\ntype AuthStateActions = SetUserDataActionCreatorType | GetCaptchaUrlActionCreatorType;\ntype AuthThunkType = ThunkAction<Promise<void>, AppReducerType, unknown, AuthStateActions | FormAction>;\n\nexport let authReducer = (state = initialState, action: AuthStateActions): AuthInitialStateType => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: !!(action.data.userId && action.data.email && action.data.login)\n            };\n        case GET_CAPTCHA_URL:\n            return {\n                ...state,\n                captchaURL: action.captchaUrl\n            };\n        default:\n            return state;\n    }\n};\n\ntype SetUserDataActionCreatorDataType = {\n    userId?: number;\n    email?: string;\n    login?: string;\n    captcha?: string;\n}\n\ntype SetUserDataActionCreatorType = {\n    type: typeof SET_USER_DATA;\n    data: SetUserDataActionCreatorDataType\n}\n\nexport const setUserDataActionCreator =\n    (userId?: number,\n     email?: string,\n     login?: string,\n     isAuth?: boolean,\n     captcha?: string): SetUserDataActionCreatorType => {\n        return {\n            type: SET_USER_DATA,\n            data: {\n                userId,\n                email,\n                login,\n                captcha\n            }\n        };\n    };\n\ntype GetCaptchaUrlActionCreatorType = {\n    type: typeof GET_CAPTCHA_URL;\n    captchaUrl: string\n}\n\nexport const getCaptchaUrlActionCreator = (captchaUrl: string): GetCaptchaUrlActionCreatorType => {\n    return {\n        type: GET_CAPTCHA_URL,\n        captchaUrl\n    };\n};\n\nexport const authThunkCreator = (): AuthThunkType => {\n    return async (dispatch) => {\n        let res = await authAPI.getAuth();\n        if (res.resultCode === 0) {\n            let {id, email, login} = res.data;\n            dispatch(setUserDataActionCreator(id, email, login, true));\n        } else {\n            dispatch(setUserDataActionCreator());\n        }\n    };\n};\n\nexport const loginThunkCreator = (email: string, password: string, rememberMe: boolean, captcha: string): AuthThunkType => {\n    return async (dispatch) => {\n        let res = await authAPI.login(email, password, rememberMe, captcha);\n        if (res.resultCode === 0) {\n            await dispatch(authThunkCreator());\n        } else {\n            if (res.resultCode === 10) {\n                await dispatch(getCaptchaURLThunkCreator());\n            }\n            dispatch(stopSubmit(\"login\", {_error: res.messages}));\n        }\n    };\n};\n\nexport const logoutThunkCreator = (): AuthThunkType => {\n    return async (dispatch) => {\n        let res = await authAPI.logout();\n        if (res.resultCode === 0) {\n            dispatch(setUserDataActionCreator(undefined, undefined, undefined, false));\n        }\n    };\n};\n\nexport const getCaptchaURLThunkCreator = (): AuthThunkType => {\n    return async (dispatch) => {\n        let res = await securityAPI.getCaptchaURL();\n        dispatch(getCaptchaUrlActionCreator(res.url));\n    };\n};\n","import React from \"react\";\nimport \"./Preloader.css\";\n\nexport const Preloader:React.FC = () => {\n  return (\n    <div className = \"preloader\">\n      <img src=\"https://youclever.org/book/website/youclever/template/images/loader.gif\" alt=''/>\n    </div>\n  );\n};\n","import {profileAPI} from \"../api/api\";\nimport {FormAction, stopSubmit} from \"redux-form\";\nimport {PhotosType, PostType, ProfileType} from \"../types\";\nimport {CallHistoryMethodAction, push} from \"connected-react-router\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppReducerType} from \"../redux-store\";\n\nconst ADD_POST = \"profile/ADD-POST\";\nconst SET_USER_PROFILE = \"profile/SET-USER-PROFILE\";\nconst GET_USER_STATUS = \"profile/GET-USER-STATUS\";\nconst SET_USER_PHOTO = \"profile/SET-USER-PHOTO\";\n\n\ntype ProfileInitialStateType = {\n    posts: PostType[];\n    profile: ProfileType | undefined;\n    status: string\n}\n\nlet initialState: ProfileInitialStateType = {\n    posts: [\n        {id: 1, message: \"Hey! How are you?\"},\n        {id: 2, message: \"Good!\"},\n        {id: 3, message: \"briliant!\"}\n    ],\n    profile: undefined,\n    status: \"\"\n};\n\ntype ProfileStateActions = AddPostActionCreatorType\n    | SetUserProfileActionCreatorType\n    | GetUserStatusActionCreatorType\n    | SavePhotoActionCreatorType\n    | CallHistoryMethodAction;\n\ntype ProfileThunkType = ThunkAction<Promise<void>, AppReducerType, unknown, ProfileStateActions | FormAction>;\n\nexport let profileReducer = (state = initialState, action: ProfileStateActions): ProfileInitialStateType => {\n    switch (action.type) {\n        case ADD_POST:\n            let text = action.text;\n            if (text.trim()) {\n                return {\n                    ...state,\n                    posts: [\n                        ...state.posts,\n                        {\n                            id: state.posts.length + 1,\n                            message: text.trim()\n                        }\n                    ]\n                };\n            }\n            return state;\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            };\n        case GET_USER_STATUS:\n            return {\n                ...state,\n                status: action.status\n            };\n        case SET_USER_PHOTO:\n            return {\n                ...state,\n                profile: {\n                    ...state.profile!,\n                    photos: action.file\n                }\n            }\n        default:\n            return state;\n    }\n};\n\ntype AddPostActionCreatorType = {\n    type: typeof ADD_POST;\n    text: string\n}\n\nexport const addPostActionCreator = (text: string): AddPostActionCreatorType => {\n    return {\n        type: ADD_POST,\n        text\n    };\n};\n\ntype SetUserProfileActionCreatorType = {\n    type: typeof SET_USER_PROFILE;\n    profile: ProfileType\n}\n\nexport const setUserProfileActionCreator = (profile: ProfileType): SetUserProfileActionCreatorType => {\n    return {\n        type: SET_USER_PROFILE,\n        profile\n    };\n};\n\ntype GetUserStatusActionCreatorType = {\n    type: typeof GET_USER_STATUS;\n    status: string\n}\n\nexport const getUserStatusActionCreator = (status: string): GetUserStatusActionCreatorType => {\n    return {\n        type: GET_USER_STATUS,\n        status\n    };\n};\n\ntype SavePhotoActionCreatorType = {\n    type: typeof SET_USER_PHOTO;\n    file: PhotosType\n}\n\nexport const savePhotoActionCreator = (file: PhotosType): SavePhotoActionCreatorType => {\n    return {\n        type: SET_USER_PHOTO,\n        file\n    };\n};\n\nexport const getUserThunkCreator = (id: number): ProfileThunkType => {\n    return async (dispatch) => {\n        try {\n            let res = await profileAPI.getProfile(id);\n            dispatch(setUserProfileActionCreator(res));\n        } catch (e) {\n            dispatch(push('/profile/error'));\n        }\n    };\n};\n\nexport const getUserStatusThunkCreator = (id: number): ProfileThunkType => {\n    return async (dispatch) => {\n        let res = await profileAPI.getStatus(id);\n        dispatch(getUserStatusActionCreator(res));\n    };\n};\n\nexport const updateUserStatusThunkCreator = (status: string): ProfileThunkType => {\n    return async (dispatch) => {\n        let res = await profileAPI.updateStatus(status);\n        if (res.resultCode === 0) dispatch(getUserStatusActionCreator(status));\n    };\n};\n\nexport const savePhotoThunkCreator = (file: File): ProfileThunkType => {\n    return async (dispatch) => {\n        let res = await profileAPI.savePhoto(file);\n        if (res.resultCode === 0) dispatch(savePhotoActionCreator(res.data.photos));\n    };\n}\n\nexport const saveDataThunkCreator = (data: ProfileType): ProfileThunkType => {\n    return async (dispatch, getState) => {\n        let res = await profileAPI.saveProfile(data);\n        if (res.resultCode === 0) {\n            let id = getState().auth.userId;\n            if (!id){\n                dispatch(push('/profile/error'));\n                return;\n            }\n            dispatch(getUserThunkCreator(id));\n        } else {\n            dispatch(stopSubmit(\"edit-profile\", {_error: res.messages[0]}));\n            return Promise.reject(res.messages[0]);\n        }\n    };\n}\n","import {DialogType, MessageType} from \"../types\";\n\nconst ADD_MESSAGE = \"dialogs/ADD-MESSAGE\";\n\ntype DialogsInitialStateType = {\n    dialogs: DialogType[];\n    messages: MessageType[]\n}\n\nlet initialState: DialogsInitialStateType = {\n    dialogs: [\n        {id: 1, name: \"Vasya\"},\n        {id: 2, name: \"Tanya\"},\n        {id: 3, name: \"Sasha\"},\n        {id: 4, name: \"Masha\"},\n        {id: 5, name: \"Ann\"},\n        {id: 6, name: \"Alex\"}\n    ],\n    messages: [\n        {id: 1, message: \"Hey!\"},\n        {id: 2, message: \"No-no-no!\"},\n        {id: 3, message: \"Oh!\"},\n        {id: 4, message: \"Go away!\"}\n    ]\n};\n\ntype DialogsStateActions = AddMessageActionCreatorType;\n\nexport let dialogsReducer = (state = initialState, action: DialogsStateActions): DialogsInitialStateType => {\n    switch (action.type) {\n        case ADD_MESSAGE:\n            let text = action.newText;\n            if (text.trim()) {\n                return {\n                    ...state,\n                    messages: [\n                        ...state.messages,\n                        {\n                            id: state.messages.length + 1,\n                            message: text.trim()\n                        }\n                    ]\n                };\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\ntype AddMessageActionCreatorType = {\n    type: typeof ADD_MESSAGE;\n    newText: string\n}\n\nexport const addMessageActionCreator = (text:string): AddMessageActionCreatorType => {\n    return {\n        type: ADD_MESSAGE,\n        newText: text\n    };\n};\n","import {usersAPI} from \"../api/api\";\r\nimport {UserType} from \"../types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppReducerType} from \"../redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst FOLLOW = \"user/FOLLOW\";\r\nconst UNFOLLOW = \"user/UNFOLLOW\";\r\nconst SET_USERS = \"user/SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"user/SET-CURRENT-PAGE\";\r\nconst SET_TOTAL_USER_COUNT = \"user/SET-TOTAL-USER-COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"user/TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"user/TOGGLE-IS-FOLLOWING-PROGRESS\";\r\n\r\n\r\ntype UsersInitialStateType = {\r\n    users: UserType[];\r\n    pageSize: number;\r\n    totalUsersCount: number;\r\n    currentPage: number;\r\n    isFetching: boolean;\r\n    followInProgress: number[]; // arrays of usersId\r\n}\r\n\r\nlet initialState: UsersInitialStateType = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followInProgress: []\r\n};\r\n\r\ntype UsersStateActions = FollowActionCreatorType\r\n    | UnfollowActionCreatorType\r\n    | SetUsersActionCreatorType\r\n    | SetCurrentPageActionCreatorType\r\n    | SetTotalUserCountActionCreatorType\r\n    | ToggleIsFetchingActionCreatorType\r\n    | FollowingInProgressActionCreatorType;\r\n\r\ntype UsersThunkType = ThunkAction<Promise<void>, AppReducerType, unknown, UsersStateActions>;\r\ntype DispatchType = Dispatch<UsersStateActions>;\r\n\r\nexport let usersReducer = (state = initialState, action: UsersStateActions): UsersInitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true};\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false};\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followInProgress: action.isFetching\r\n                    ? [...state.followInProgress, action.userId]\r\n                    : state.followInProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype FollowActionCreatorType = {\r\n    type: typeof FOLLOW;\r\n    userId: number\r\n}\r\n\r\nconst followActionCreator = (userId: number): FollowActionCreatorType => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    };\r\n};\r\n\r\ntype UnfollowActionCreatorType = {\r\n    type: typeof UNFOLLOW;\r\n    userId: number\r\n}\r\n\r\nconst unfollowActionCreator = (userId: number): UnfollowActionCreatorType => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    };\r\n};\r\n\r\ntype SetUsersActionCreatorType = {\r\n    type: typeof SET_USERS;\r\n    users: UserType[]\r\n}\r\n\r\nconst setUsersActionCreator = (users: UserType[]): SetUsersActionCreatorType => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    };\r\n};\r\n\r\ntype SetCurrentPageActionCreatorType = {\r\n    type: typeof SET_CURRENT_PAGE;\r\n    currentPage: number\r\n}\r\n\r\nconst setCurrentPageActionCreator = (currentPage: number): SetCurrentPageActionCreatorType => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    };\r\n};\r\n\r\ntype SetTotalUserCountActionCreatorType = {\r\n    type: typeof SET_TOTAL_USER_COUNT;\r\n    totalUsersCount: number\r\n}\r\n\r\nconst setTotalUserCountActionCreator = (totalUsersCount: number): SetTotalUserCountActionCreatorType => {\r\n    return {\r\n        type: SET_TOTAL_USER_COUNT,\r\n        totalUsersCount\r\n    };\r\n};\r\n\r\ntype ToggleIsFetchingActionCreatorType = {\r\n    type: typeof TOGGLE_IS_FETCHING;\r\n    isFetching: boolean\r\n}\r\n\r\nconst toggleIsFetchingActionCreator = (isFetching: boolean): ToggleIsFetchingActionCreatorType => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    };\r\n};\r\n\r\ntype FollowingInProgressActionCreatorType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS;\r\n    isFetching: boolean;\r\n    userId: number\r\n}\r\n\r\nconst followingInProgressActionCreator = (isFetching: boolean, userId: number): FollowingInProgressActionCreatorType => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    };\r\n};\r\n\r\nexport const getUserThunkCreator = (pageSize: number, currentPage: number): UsersThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetchingActionCreator(true));\r\n\r\n        let res = await usersAPI.getUsers(pageSize, currentPage);\r\n        dispatch(toggleIsFetchingActionCreator(false));\r\n        dispatch(setUsersActionCreator(res.items));\r\n        dispatch(setTotalUserCountActionCreator(res.totalCount));\r\n        dispatch(setCurrentPageActionCreator(currentPage));\r\n    };\r\n};\r\n\r\nconst _followUnfollowMethod = async (dispatch: DispatchType, id: number, apiMethod: any,\r\n                                     actionCreator: (id: number) => UsersStateActions) => {\r\n    dispatch(followingInProgressActionCreator(true, id));\r\n    let res = await apiMethod(id);\r\n    if (res.resultCode === 0) {\r\n        dispatch(actionCreator(id));\r\n    }\r\n    dispatch(followingInProgressActionCreator(false, id));\r\n}\r\n\r\nexport const followUserThunkCreator = (id: number): UsersThunkType => {\r\n    return async (dispatch) => {\r\n        await _followUnfollowMethod(dispatch, id, usersAPI.followUsers.bind(usersAPI), followActionCreator);\r\n    };\r\n};\r\n\r\nexport const unfollowUserThunkCreator = (id: number): UsersThunkType => {\r\n    return async (dispatch) => {\r\n        await _followUnfollowMethod(dispatch, id, usersAPI.unfollowUsers.bind(usersAPI), unfollowActionCreator);\r\n    };\r\n};\r\n","import * as axios from \"axios\";\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://test-api.mokeev1995.ru/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"4531d9e2-5896-44a2-8434-2e6848972af0\"\n  }\n});\n\nexport const usersAPI = {\n  getUsers(pageSize, currentPage) {\n    return instance\n      .get(`users?count=${pageSize}&page=${currentPage}`)\n      .then(res => res.data);\n  },\n  followUsers(id) {\n    return instance.post(`follow/${id}`, {}).then(res => res.data);\n  },\n  unfollowUsers(id) {\n    return instance.delete(`follow/${id}`).then(res => res.data);\n  }\n};\n\nexport const profileAPI = {\n  getProfile(id) {\n    return instance.get(`profile/${id}`).then(res => res.data);\n  },\n  getStatus(id) {\n    return instance.get(`profile/status/${id}`).then(res => res.data);\n  },\n  updateStatus(status) {\n    return instance.put('profile/status', {status}).then(res => res.data);\n  },\n  savePhoto(file) {\n    const formData = new FormData();\n    formData.append('image', file);\n    return instance.put('profile/photo', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => res.data);\n  },\n  saveProfile(data) {\n    return instance.put('profile', data).then(res => res.data);\n  }\n};\n\nexport const authAPI = {\n  getAuth(){\n    return instance.get(\"auth/me\").then(res => res.data);\n  },\n  login(email, password, rememberMe = false, captcha= null) {\n    return instance.post(`auth/login`, {email, password, rememberMe, captcha}).then(res => res.data);\n  },\n  logout() {\n    return instance.delete(`auth/login`).then(res => res.data);\n  }\n}\n\nexport const securityAPI = {\n  getCaptchaURL(){\n    return instance.get(\"security/get-captcha-url\").then(res => res.data);\n  }\n}\n\n"],"sourceRoot":""}