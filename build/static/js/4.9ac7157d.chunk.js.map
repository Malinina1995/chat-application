{"version":3,"sources":["utils/validators/validators.js","FormControls/FormControls.js","hoc/AuthRedirect.js","Components/ProfileComponent/PostComponent/Post.js","Components/ProfileComponent/MyPostsComponent/MyPosts.js","Components/ProfileComponent/MyPostsComponent/MyPostsContainer.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/ProfileComponent/ProfileStatus/ProfileStatusWithHooks.js","Components/ProfileComponent/ProfileInfoComponent/ProfileInfo.js","Components/ProfileComponent/Profile.js","Components/ProfileComponent/ProfileContainer.js"],"names":["required","value","maxLength","max","length","undefined","classNames","require","Textarea","input","meta","touched","error","placeholder","warning","props","hasError","classesForTextarea","className","Input","authRedirect","Component","RedirectComponent","this","isAuth","to","React","connect","state","auth","authRedirectAwaiter","AuthRedirectAwaiter","authThunkCreator","Post","src","message","maxLength30","AddPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","name","rows","validate","MyPostsContainer","profilePage","addPost","addPostActionCreator","text","newPostText","posts","reverse","map","post","key","id","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","autoFocus","onBlur","updateUserStatus","onDoubleClick","ProfileInfo","profile","Preloader","imagePath","photos","large","fullName","Profile","ProfileContainer","userId","match","params","logUserId","getUserThunkCreator","getUserStatusThunkCreator","updateUserStatusThunkCreator","compose","withRouter"],"mappings":"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","file":"static/js/4.9ac7157d.chunk.js","sourcesContent":["export const required = value => {\r\n  if(value) return undefined;\r\n  return 'Field is reqiared';\r\n}\r\n\r\nexport const maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n","import React from 'react';\nimport './FormControls.css';\nvar classNames = require('classnames');\n\nexport const Textarea = ({input, meta: { touched, error, warning }, placeholder, ...props}) => {\n  const hasError =  touched && error;\n  const classesForTextarea = classNames({\n    'form-control': true,\n    'send-message': true,\n    'errorTextarea': hasError,\n    'borderColor': !hasError\n  });\n\n  return (\n    <textarea className={classesForTextarea} placeholder={placeholder} {...input} {...props}/>\n  )\n}\n\nexport const Input = ({input, meta: { touched, error, warning }, placeholder, ...props}) => {\n  const hasError =  touched && error;\n  const classesForTextarea = classNames({\n    'form-control': true,\n    'errorTextarea': hasError,\n    'borderColor': !hasError\n  });\n\n  return (\n    <input className={classesForTextarea} placeholder={placeholder} {...input} {...props}/>\n  )\n}","import { Redirect } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { authThunkCreator } from '../reducers/authReducer';\r\nimport { Preloader } from '../Components/PreloaderComponent/Preloader';\r\n\r\n\r\nexport const authRedirect = (Component) => {\r\n  \r\n  let mapStateToRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  })\r\n  class RedirectComponent extends React.Component {\r\n    \r\n    render() {\r\n      if(!this.props.isAuth){\r\n        return <Redirect to=\"/login\"/>\r\n      } \r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let connectAuthRedirect = connect(mapStateToRedirect)(RedirectComponent);\r\n\r\n  return connectAuthRedirect;\r\n}\r\n\r\nexport const authRedirectAwaiter = (Component) => {\r\n  \r\n  let mapStateToRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  })\r\n  class AuthRedirectAwaiter extends React.Component {\r\n    componentDidMount() {\r\n      this.props.authThunkCreator();\r\n    }\r\n    \r\n    render() {\r\n      if(this.props.isAuth === null){\r\n        return <Preloader />\r\n      } \r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n\r\n  let connectAuthRedirect = connect(mapStateToRedirect, {authThunkCreator})(AuthRedirectAwaiter);\r\n\r\n  return connectAuthRedirect;\r\n}","import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport \"./Post.css\";\r\n\r\nexport function Post(props) {\r\n  return (\r\n    <div className=\"post\">\r\n      <img src=\"https://avatars.yandex.net/get-music-user-playlist/27701/265236767.1000.16809/m1000x1000?1498108273588&webp=false\" />\r\n      <span>{props.message}</span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, maxLength } from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../../FormControls/FormControls\";\n\nimport \"./MyPosts.css\";\n\nimport { Post } from \"../PostComponent/Post\";\n\nexport function MyPosts(props) {\n  let addNewPost = text => {\n    props.addPost(text.newPostText);\n  };\n\n  return (\n    <div className=\"profile_posts\">\n      <AddPostsReduxForm onSubmit={addNewPost} />\n      <div className=\"profile_posts-items\">\n        {[...props.profilePage.posts].reverse().map(post => {\n          return <Post key={post.id} message={post.message} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nlet maxLength30 = maxLength(30);\n\nfunction PostsForm(props) {\n  return (\n    <form className=\"form-group textarea\" onSubmit={props.handleSubmit}>\n      <Field\n        component={Textarea}\n        name=\"newPostText\"\n        placeholder=\"Что у вас нового?\"\n        rows=\"3\"\n        validate={[required, maxLength30]}\n      />\n      <div>\n        <button className=\"btn btn-primary textarea-send\">Add</button>\n      </div>\n    </form>\n  );\n}\n\nconst AddPostsReduxForm = reduxForm({\n  form: \"addPost\"\n})(PostsForm);\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { connect } from \"react-redux\";\n\nimport { MyPosts } from \"./MyPosts\";\nimport {\n  addPostActionCreator\n} from \"../../../reducers/profileReducer\";\n\nlet mapStateToProps = state => {\n  return {\n    profilePage: state.profilePage\n  };\n};\n\nexport let MyPostsContainer = connect(\n  mapStateToProps,\n  {\n    addPost: addPostActionCreator\n  }\n)(MyPosts);\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from \"react\";\n\nexport let ProfileStatusWithHooks = props => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateUserStatus(status);\n  };\n\n  const onStatusChange = e => {\n    setStatus(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  return (\n    <div>\n      {!editMode ? (\n        <div onDoubleClick={activateEditMode}>\n          {props.status || \"No status\"}\n        </div>\n      ) : (\n        <div>\n          <input\n            onChange={onStatusChange}\n            autoFocus={true}\n            onBlur={deactivateEditMode}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Preloader } from \"../../PreloaderComponent/Preloader\";\r\n\r\nimport \"./ProfileInfo.css\";\r\nimport { ProfileStatusWithHooks } from \"../ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nexport function ProfileInfo(props) {\r\n  if(!props.profile){\r\n    return <Preloader />\r\n  }\r\n  let imagePath = props.profile.photos.large ? props.profile.photos.large : 'https://avatars.mds.yandex.net/get-pdb/1732371/78b3b128-3813-4d35-8b87-b3c911581ca0/s1200?webp=false';\r\n  return (\r\n    <div className='profile_info'>\r\n      <img src={imagePath} className='profile_info-avatar'/ >\r\n      <div className='profile_information'>\r\n        <span className='profile_info-name'>{props.profile.fullName}</span>\r\n        <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport \"./Profile.css\";\r\n\r\nimport { MyPostsContainer } from \"./MyPostsComponent/MyPostsContainer\";\r\nimport { ProfileInfo } from \"./ProfileInfoComponent/ProfileInfo\";\r\n\r\nexport function Profile(props) {\r\n  return (\r\n    <div className=\"profile-content\">\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateUserStatus={props.updateUserStatus}\r\n      />\r\n      <div className=\"profile_posts\">\r\n        <MyPostsContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\n\nimport { Profile } from \"./Profile\";\nimport {\n  getUserThunkCreator,\n  getUserStatusThunkCreator,\n  updateUserStatusThunkCreator\n} from \"../../reducers/profileReducer\";\nimport { Preloader } from \"../PreloaderComponent/Preloader\";\nimport { authRedirect, authRedirectAwaiter } from \"../../hoc/AuthRedirect\";\n\nclass ProfileContainer extends Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId\n      ? this.props.match.params.userId\n      : this.props.logUserId;\n    this.props.getUserThunkCreator(userId);\n    this.props.getUserStatusThunkCreator(userId);\n  }\n\n  render() {\n    return (\n      <>\n        {!this.props.profile ? (\n          <Preloader />\n        ) : (\n            <Profile\n              {...this.props}\n              profile={this.props.profile}\n              status={this.props.status}\n              updateUserStatus={this.props.updateUserStatusThunkCreator}\n            />\n        )}\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    logUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    {\n      getUserThunkCreator,\n      getUserStatusThunkCreator,\n      updateUserStatusThunkCreator\n    }\n  ),\n  withRouter,\n  authRedirectAwaiter,\n  authRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}